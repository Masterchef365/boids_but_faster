#version 450
layout (local_size_x = 16) in;

#include "shared.glsl"

layout(std430, binding = 0) buffer Acc {
    Accumulator acc[];
};

layout(std430, binding = 1) buffer Boids {
    Boid boids[];
};

layout(std430, push_constant) uniform Params {
    vec3 plane_pos;
    uint mask;
    vec3 plane_normal;
    uint level;
};

void main() {
    uint gid = gl_GlobalInvocationID.x;
    if (gid >= boids.length()) return;

    // Zero this accumulator
    acc[gid].left.pos = vec3(0);
    acc[gid].left.heading = vec3(0);
    acc[gid].left.count = 0;

    acc[gid].right.pos = vec3(0);
    acc[gid].right.heading = vec3(0);
    acc[gid].right.count = 0;

    // Check to see if we're a child of the selected node
    bool mask_matches = boids[gid].mask == mask;
    bool level_matches = boids[gid].level == level;
    if (mask_matches && level_matches) {
        // Decide which face of the plane we're on
        bool plane_face = dot(
            boids[gid].pos - plane_pos, 
            plane_normal
        ) > 0.;

        // Insert the new bit into this boid's tree mask
        boids[gid].level += 1;

        if (plane_face) {
            acc[gid].left.pos = boids[gid].pos;
            acc[gid].left.heading = boids[gid].heading;
            acc[gid].left.count = 1;
        } else {
            // Set the bit for this face
            boids[gid].mask |= 1 << level;
            acc[gid].right.pos = boids[gid].pos;
            acc[gid].right.heading = boids[gid].heading;
            acc[gid].right.count = 1;
        }
    }
}

